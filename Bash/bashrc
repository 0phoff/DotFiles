# Only source bashrc on interactive prompts
[[ $- != *i* ]] && return

# Set Prompt
PS1=$'\e[7;32;49m\uE0B0\e[0m\e[30;42m \u $(virtualenv_info)\e[0m\e[32;49m\uE0B0\e[7;90;49m\uE0B0\e[0m\e[97;100m \w \e[90;49m\uE0B0\e[0m\n'
virtualenv_info() {
     # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="î‚± ${VIRTUAL_ENV##*/} "
    else
        # In case you don't have one activated
        venv=''
    fi
    [[ -n "$venv" ]] && echo "$venv"
}
precmd() {
  if [ -n "$TMUX" ]; then
    tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD"
  fi
}
PROMPT_COMMAND=precmd

# Set Environment variables
export EDITOR="vim"
export PAGER="less"

# Set Custom Aliases
alias ls="ls --color"
alias ll="ls -Al"
alias lx="ls -AgohX"
alias vim="nvim"
alias top="vtop --theme wizard"
alias dev=". .startup.sh"

alias mediaserve="minidlnad -f /home/ophoff/.config/minidlna/minidlna.conf -P /home/ophoff/.config/minidlna/minidlna.pid -r"
alias mediakill="pkill minidlnad"

alias mdserve="sudo -E grip 80 &>/dev/null"
alias mdkill="sudo -E pkill grip"

alias catkin_make="catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python2 -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/libpython2.7.so"
alias rosinit="source rosinit.sh"

# Custom Alias Functions
## Executes sudo -E for nvim so it loads with user config and not root config
## Otherwise behaves like regular sudo command
sudo() {
    if [[ $1 == "vim" ]] || [[ $1 == "nvim" ]]; then
        command sudo -E nvim "${@:2}"
    else
        command sudo "$@"
    fi
}
## tks       => tmux kill-server
## tks -a    => tmux kill-session -a
## tks 1     => tmux kill-session -t 1
tks() {
    if [ -z ${1+x} ]; then
        tmux kill-server
    else
        [ ${1:0:1} == "-" ] && tmux kill-session $1 || tmux kill-session -t $1
    fi
}

# ROS Settings
if [ -f /opt/ros/kinetic/setup.bash ]; then
    source /opt/ros/kinetic/setup.bash
    
    if [ -n "$ROSSETUP" ]; then
        source "$ROSSETUP"
    fi
fi

if [ -f ~/.dir_colors ]; then
    eval "$(dircolors ~/.dir_colors)"
fi

# Python virutalenvwrapper
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    if [ -f /usr/local/bin/virtualenvwrapper_lazy.sh ]; then
        export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
        source /usr/local/bin/virtualenvwrapper_lazy.sh
    else
        source /usr/local/bin/virtualenvwrapper.sh
    fi
fi

# Start Bash with TMUX
if [ -z "$SSH_CONNECTION" ]; then
    if command -v tmux>/dev/null; then
        [[ -z "$TMUX" ]] && exec tmux
    fi
fi

